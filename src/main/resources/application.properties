spring.application.name=explorers

server.port=8085


#@echo off
#echo ******** Starting CI/CD Pipeline Tasks ********
#
#REM --------- BUILD PHASE ---------
#echo.
#echo ............ Build Phase Started :: Compiling Source Code ..............
#cd explorer
#call mvn clean install
#if %errorlevel% neq 0 exit /b %errorlevel%
#
#REM --------- TEST PHASE ---------
#echo.
#echo ............ Test Phase Started :: Running Integration Tests ..............
#cd ..\integration-testing
#call mvn clean verify -P integration-test
#if %errorlevel% neq 0 exit /b %errorlevel%
#
#echo.
#echo ******** CI/CD Pipeline Completed Successfully ********


#@echo off
#REM --------- POSTBUILD (PROVISIONING DEPLOYMENT) ---------
#echo.
#echo ............ Copying Artifact from job1 to docker directory ...........
#
#if not exist docker (
#    mkdir docker
#)
#
#copy "C:\ProgramData\Jenkins\.jenkins\workspace\job1\target\explorers-0.0.1-SNAPSHOT.jar" docker\
#copy "C:\ProgramData\Jenkins\.jenkins\workspace\job1\Dockerfile" docker\
#if errorlevel 1 (
#    echo Failed to copy JAR file.
#    exit /b 1
#)
#
#echo.
#echo ........... Provisioning Phase Started :: Building Docker Container ...........
#
#cd docker
#docker build -t devops_pipeline_demo .
#if errorlevel 1 (
#    echo Docker build failed.
#    exit /b 1
#)

#@echo off
#set CONTAINER=devops_pipeline_demo
#
#REM Check if the container exists and remove if running
#for /f "tokens=*" %%i in ('docker ps -a -q -f name=%CONTAINER%') do (
#    echo Container "%CONTAINER%" exists. Stopping and removing...
#    docker rm -f %CONTAINER%
#)
#
#echo.
#echo ....... Deployment Phase Started :: Running Docker Container :: ...........
#docker run -d -p 8085:8085 --name %CONTAINER% %CONTAINER%
#
#echo ........................................................
#echo Deployed here: http://localhost:8085